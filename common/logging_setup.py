import logging
import os
import sys
from logstash_async.handler import AsynchronousLogstashHandler

def setup_logging(service_name: str):
    """
    Sets up a logger to send logs to Logstash.

    Args:
        service_name: The name of the service, which will be added as a field to the logs.
    """
    # Get Logstash connection details from environment variables, with defaults.
    logstash_host = os.getenv('LOGSTASH_HOST', 'localhost')
    logstash_port = int(os.getenv('LOGSTASH_PORT', 5000))

    # Get the root logger.
    logger = logging.getLogger()
    logger.setLevel(logging.INFO)

    # Remove any existing handlers to avoid duplicate logs.
    if logger.hasHandlers():
        logger.handlers.clear()

    # Create a handler for sending logs to Logstash over TCP.
    logstash_handler = AsynchronousLogstashHandler(
        host=logstash_host,
        port=logstash_port,
        database_path=f'{service_name}_logstash.db' # A local buffer for logs
    )

    # Add a formatter to include the service name in the log record.
    # This is useful for filtering logs in Kibana.
    formatter = logging.Formatter(fmt=f'%(asctime)s - %(levelname)s - {service_name} - %(message)s')
    logstash_handler.setFormatter(formatter)

    # Add the Logstash handler to the root logger.
    logger.addHandler(logstash_handler)

    # Also, add a console handler for local debugging.
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setFormatter(formatter)
    logger.addHandler(console_handler)

    logging.info(f"Logging for service '{service_name}' set up to send to Logstash at {logstash_host}:{logstash_port}")

if __name__ == '__main__':
    # Example usage:
    setup_logging('test-service')
    try:
        logging.info("This is an informational message.")
        logging.warning("This is a warning message.")
        logging.error("This is an error message.", extra={'extra_field': 'extra_value'})
        # In a real app, logs would be generated by the application code.
    except Exception as e:
        logging.exception(f"An unexpected error occurred: {e}")
