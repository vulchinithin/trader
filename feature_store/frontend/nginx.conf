# This is the Nginx configuration for our frontend service.

server {
  # Listen on port 80, the default HTTP port.
  listen 80;

  # The root directory for serving static files.
  # This matches the directory where we copied our built React app in the Dockerfile.
  root /usr/share/nginx/html;

  # Serve index.html for the root URL.
  index index.html;

  # This is the main location block.
  # It tries to serve the requested file directly.
  # If the file doesn't exist (e.g., for a client-side route like /dashboard),
  # it falls back to serving index.html. This is key for single-page applications.
  location / {
    try_files $uri /index.html;
  }

  # --- API Proxy ---
  # This block will proxy requests from our frontend to the backend API.
  # For example, a request to '/api/health' from the frontend will be forwarded
  # to 'http://api_backend:8000/health'.
  # We also need to handle WebSocket connections for our real-time data.
  location /ws/ {
      proxy_pass http://api_backend:8000; # The service name from docker-compose
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
  }

  # You can add more proxy locations here if your backend has more API routes.
  # location /api/ {
  #   proxy_pass http://api_backend:8000; # The service name from docker-compose
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  # }
}
